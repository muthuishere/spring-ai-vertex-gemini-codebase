spring.application.name=natural-sql-ai




## Get projectid by running gcloud projects list
spring.ai.vertex.ai.gemini.projectId=myspringai-test

#PROJECT_ID="myspringai-test"
#LOCATION_ID="global"
#API_ENDPOINT="aiplatform.googleapis.com"
#MODEL_ID="gemini-2.0-flash-001"
#GENERATE_CONTENT_API="streamGenerateContent"
spring.ai.vertex.ai.gemini.location=global

## Identify the models from https://console.cloud.google.com/vertex-ai/model-garden
#spring.ai.vertex.ai.gemini.chat.options.model=gemini-1.5-flash

#spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash
spring.ai.vertex.ai.gemini.transport=REST
spring.ai.vertex.ai.gemini.apiEndpoint=aiplatform.googleapis.com


### Local related properties
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

# Configure the Cloud SQL instance , commented for local , false for local
spring.cloud.gcp.sql.enabled=false
#spring.cloud.gcp.sql.instance-connection-name=projectid:us-central1:postgres-instance
#spring.cloud.gcp.sql.database-name=postgres


# Configure username/password
spring.datasource.username=postgres
spring.datasource.password=postgres


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# set logger to debug
#logging.level.ROOT=DEBUG


rawllm.endpoint=https://aiplatform.googleapis.com/v1beta1/projects/myspringai-test/locations/global/endpoints/openapi/chat/completions
rawllm.model=google/gemini-2.0-flash


